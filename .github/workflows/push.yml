name: On Push (Master)

on:
  push:
    branches:
      - master

jobs:
  test_web_dashboard:
    name: Run Tests (Web Dashboard)
    uses: ./.github/workflows/pr_web_dashboard.yml

  test_server:
    name: Run Tests (Server)
    uses: ./.github/workflows/pr_server.yml

  docker-publish:
    name: Build Docker Image & Publish
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ghcr.io/${{ github.repository }}
    needs:
      - test_web_dashboard
      - test_server

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Version From package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: Get Current Date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Build & Push to GitHub Packages
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ steps.package-version.outputs.current-version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            DATE_CREATED=${{ steps.date.outputs.date }}
            VERSION=${{ steps.package-version.outputs.current-version }}

      - name: Image Digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  docs:
    name: Generate Docs & Publish
    runs-on: ubuntu-latest
    needs:
      - docker-publish
    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
          cache: npm
          cache-dependency-path: ./server/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Build Documentation
        run: npm run docgen:full

      - name: Publish Documentation
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master'
        with:
          personal_token: ${{ secrets.REPO_ACCESS_TOKEN }}
          external_repository: freenalytics/api-docs
          publish_branch: public
          publish_dir: ./build-docs
          enable_jekyll: false
          allow_empty_commit: true
          commit_message: ${{ github.event.head_commit.message }}
